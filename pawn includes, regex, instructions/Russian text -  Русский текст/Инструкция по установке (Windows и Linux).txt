Advanced-SA-NickName v5.0 - Инструкция по установке.

1. Поместите файлы ASAN.dll и ASAN.so в папку plugins;
2. Поместите файлы ASAN.inc и ASAN_FS.inc из папки с плагином 'pawno/include' в папку 'pawno/include' вашего сервера;
3. В файле 'server.cfg', в строке 'plugins' пропишите ASAN для Windows или ASAN.so для Linux;
4. Для установки инклуда и корректной работы плагина:
		4.1) В Вашем GameMode после строки
				#include <a_samp>
			обязательно пропишите инклуд
				#include "ASAN"
		4.2) Во всех Ваших FilterScripts после строки
				#include <a_samp>
			обязательно пропишите инклуд
				#include "ASAN_FS"		
5. После этого обязательно перекомпилируйте все свои моды/скрипты;
6. В инклуде ASAN_FS.inc присутствуют следующие хуки/natives для корректной работы плагина. НЕ ИЗМЕНЯЙТЕ ИХ СОДЕРЖИМОЕ!
		6.1) native ASAN_HOOK_GetPlayerName(name[]);
		6.2) stock ASAN_INCLUDE_GetPlayerName(playerid, name[], length);
		6.3) stock ASAN_INCLUDE_SetPlayerName(playerid, name[]);
		
7. Инклуд добавляет NATIVEs для использования в Pawn (в Вашем моде):
		7.1) native ASAN_IsValidNickName(name[])
			- Проверяет валидность введенного никнейма, исходя из настроек в Вашем 'ASAN_Config.ini';
			- Возвращает 'true;' в случае коррекности введенного ника;
			- Возвращает 'false;' в случае не коррекности введенного ника;
			
		7.2) native ASAN_GetMinNickLength()
			- Возвращяет минимальную длину никнейма, исходя из настроек в Вашем 'ASAN_Config.ini';
			
		7.3) native ASAN_GetMaxNickLength()
			- Возвращяет максимальную длину никнейма, исходя из настроек в Вашем 'ASAN_Config.ini';
			
8. Файл конфигураций 'ASAN_Config.ini' автоматически появится в папке 'scriptfiles' после первого запука. Он содержит в себе:
	Обязательно требуется перезапуск сервера после любого редактирования файла настроек.
	
		Max_Players = 1000
			- Максимальное количество игроков Вашего сервера. НЕ УСТАНАВЛИВАЙТЕ значение меньше, чем установлено в Вашем server.cfg.
			- По умолчанию = 1000

		Language = 1
			- Язык в логах плагина. 0 - Английский, 1 - Русский

		EnableValidNickHOOK = 1
			- Включить хук проверки символов - 1, Отключить хук проверки символов - 0

		RegexTemplate = ([а-яА-ЯёЁ0-9\[\]\_\$\=\(\)\@\.]+)|([a-zA-Z0-9\[\]\_\$\=\(\)\@\.]+)
			- Шаблон регулярного выражения (Regex)! Не включайте в шаблон длину ника!
			- Некоторые шаблоны Вы можете найти в архиве плагина

		MaxAllowdedSpaces = 0
			- Количество замен символов нижнего подчеркивания(_) на символы пробела( )
			- (-1 - нет ограничений(все символы будут заменены), 0 - отключено(По умолчанию))
			- Пример. Если 'MaxAllowdedSpaces = 1' -> 'John_Connor' будет на серверной стороне (В TAB меню) как 'John Connor' после подключения игрока.
			- Другие символы нижнего подчеркивания будут пропущены (John_Connor_Jr станет John Connor_Jr)
			- Будьте осторожны, использую данную функцию с Вашей базой данных!
			- НЕ ИСПОЛЬЗУЙТЕ ПРОБЕЛЫ НА СТОРОНЕ КЛИЕНТА (ОКНО SA-MP)! ТОЛЬКО СЕРВЕРНАЯ СТОРОНА!

		EnableNickLengthHOOK = 1
			- Включить хук длины символов ника - 1. Отключить хук длины символов ника - 0.

		MinNickLength = 3
			- Минимальная длина НикНейма. По умолчанию = 3
			- Значение должно быть > 0!

		MaxNickLength = 20
			- Максимальная длина НикНейма. По умолчанию = 20
			- Не увеличивайте это зачение больше чем 24!

		EnableRepeatedNicksHOOK = 1
			- Включить хук повторных ников - 1, Отключить хук повторных ников - 0
			- Два или более игроков могут использовать одинаковые НикНеймы

		IgnoreRepeatedNicksCase = 1
			- Когда установлено - 1, регистр не проверяется - ник 'приВет' тоже самое, что и 'Привет'. Когда - 0, они считаются разными.
			- Пример. Если 'IgnoreRepeatedNicksCase = 1' Вы можете использовать тот же самый НикНейм (Пример. Алекс и АЛЕКС) в любом регистре одновременно. Если это = 0, только один регистр может быть использован (тот, что подключился первым)
			- Внимание! Эта функция была протестирована только с Русскими и Английскими символами! Никто не знает, как она будет работать с другим языком!

		MaxRepeatedNicks = -1
			- Количество повторных НикНеймов (-1 - нет ограничений, 0 - тоже самое, что и 'EnableRepeatedNicksHOOK = 0')
		

9. Запускаем сервер, читаем лог, радуемся :)

Создатель:
	[KrYpToDeN]
Благодарности:
	Большое спасибо [EC]Zero за помощь с нахождением адресов памяти и реализации автоматического нахождения адресов для плагина версии 1.0!
	Большое спасибо Enrique_Heimonen за помощь в тестировании!
	Большое спасибо ZiGGi за помощь в нахождении адреса памяти для повторных никнеймов!
Официальные ссылки для обсуждения плагина
	Порталы на русском языке:
		http://lightcode.ru/showthread.php?t=113118
		http://pawno.su/showthread.php?t=114245
		http://forum.sa-mp.com/showthread.php?t=617993
	Порталы на английском языке:	
		http://forum.sa-mp.com/showthread.php?t=647528
Актуальную версия плагина, инклуда, а также англоязычную версию Вы можете найти на официальной странице плагина:
	https://github.com/KrYpToDeN/Advanced-SA-NickName
	
Свои предложения по дальнейшему развитию плагина, обнаружении каких-либо багов, сбоев Вы можете написать в Issue на GitHub:
	https://github.com/KrYpToDeN/Advanced-SA-NickName/issues